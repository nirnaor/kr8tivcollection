  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>DiamondsGallery/src/public/js/jquery.cross-slide.min.js at goingback Â· nirnaor/DiamondsGallery</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon-precomposed" sizes="57x57" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="apple-touch-icon-114.png" />
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="apple-touch-icon-144.png" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="apple-touch-icon-144.png" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.png" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="QSO3OSD+zlFyHLL3zMdy1qtIaQmBvriZVQYgBfgFht8=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-3a0c877fa61ba76225670ed58457daccf38a8256.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-f2af3e9b0591a7ef9a9c9b3b9a64dca18665a9e2.css" media="screen" rel="stylesheet" type="text/css" />
    


    <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-c12eab4295f1d4a7040c603970f25528f7f173ba.js" type="text/javascript"></script>
    
    <script defer="defer" src="https://a248.e.akamai.net/assets.github.com/assets/github-c7ce4d0e13e9aa0cd0fd2bef72c85e9c0f93b1ec.js" type="text/javascript"></script>
    
    

      <link rel='permalink' href='/nirnaor/DiamondsGallery/blob/8e461faec0d4111765903bc76370ef822e903567/src/public/js/jquery.cross-slide.min.js'>
    <meta property="og:title" content="DiamondsGallery"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/nirnaor/DiamondsGallery"/>
    <meta property="og:image" content="https://a248.e.akamai.net/assets.github.com/images/gravatars/gravatar-140.png?1340659560"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="The diamonds gallery for alon's site. Contribute to DiamondsGallery development by creating an account on GitHub."/>

    <meta name="description" content="The diamonds gallery for alon's site. Contribute to DiamondsGallery development by creating an account on GitHub." />

  <link href="https://github.com/nirnaor/DiamondsGallery/commits/goingback.atom" rel="alternate" title="Recent Commits to DiamondsGallery:goingback" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob linux vis-public env-production ">
    <div id="wrapper">

    
    

      <div id="header" class="true clearfix">
        <div class="container clearfix">
          <a class="site-logo" href="https://github.com/">
            <img alt="GitHub" class="github-logo-4x" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x.png?1340659561" />
            <img alt="GitHub" class="github-logo-4x-hover" height="30" src="https://a248.e.akamai.net/assets.github.com/images/modules/header/logov7@4x-hover.png?1340659561" />
          </a>

              <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have unread notifications">
                <span class="mail-status unread"></span>
              </a>

              
    <div class="topsearch  ">
        <form accept-charset="UTF-8" action="/search" id="top_search_form" method="get">
  <a href="/search" class="advanced-search tooltipped downwards" title="Advanced Search"><span class="mini-icon mini-icon-advanced-search"></span></a>
  <div class="search placeholder-field js-placeholder-field">
    <input type="text" class="search my_repos_autocompleter" id="global-search-field" name="q" results="5" spellcheck="false" autocomplete="off" data-autocomplete="my-repos-autocomplete" placeholder="Search&hellip;" data-hotkey="s" />
    <div id="my-repos-autocomplete" class="autocomplete-results">
      <ul class="js-navigation-container"></ul>
    </div>
    <input type="submit" value="Search" class="button">
    <span class="mini-icon mini-icon-search-input"></span>
  </div>
  <input type="hidden" name="type" value="Everything" />
  <input type="hidden" name="repo" value="" />
  <input type="hidden" name="langOverride" value="" />
  <input type="hidden" name="start_value" value="1" />
</form>

      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore</a></li>
          <li><a href="https://gist.github.com">Gist</a></li>
          <li><a href="/blog">Blog</a></li>
        <li><a href="http://help.github.com">Help</a></li>
      </ul>
    </div>


            


  <div id="userbox">
    <div id="user">
      <a href="https://github.com/nirnaor"><img height="20" src="https://secure.gravatar.com/avatar/ec189ed8d9487dc53c8ea361f1628459?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png" width="20" /></a>
      <a href="https://github.com/nirnaor" class="name">nirnaor</a>
    </div>
    <ul id="user-links">
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a New Repo"><span class="mini-icon mini-icon-create"></span></a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account Settings ">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
          <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign Out">
            <span class="mini-icon mini-icon-logout"></span>
          </a>
      </li>
    </ul>
  </div>



          
        </div>
      </div>

      

      

            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="container hentry">
        <div class="pagehead repohead instapaper_ignore readability-menu">
        <div class="title-actions-bar">
          



              <ul class="pagehead-actions">

          <li class="nspr">
            <a href="/nirnaor/DiamondsGallery/pull/new/goingback" class="minibutton btn-pull-request ">Pull Request</a>
          </li>

          <li class="subscription">
              <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="QSO3OSD+zlFyHLL3zMdy1qtIaQmBvriZVQYgBfgFht8=" /></div>
  <input id="repository_id" name="repository_id" type="hidden" value="3117353" />
  <div class="context-menu-container js-menu-container js-context-menu">
    <span class="minibutton switcher bigger js-menu-target">
      <span class="js-context-button">
          <span class="mini-icon mini-icon-unwatch"></span> Unwatch
      </span>
    </span>

    <div class="context-pane js-menu-content">
      <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
      <div class="context-title">Notification status</div>

      <div class="context-body pane-selector">
        <ul class="js-navigation-container">
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_included" name="do" type="radio" value="included" />
              <h4>Not watching</h4>
              <p>You will only receive notifications when you participate or are mentioned.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-watching"></span>
              Watch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target selected">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input checked="checked" id="do_subscribed" name="do" type="radio" value="subscribed" />
              <h4>Watching</h4>
              <p>You will receive all notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-unwatch"></span>
              Unwatch
            </span>
          </li>
          <li class="selector-item js-navigation-item js-navigation-target ">
            <span class="mini-icon mini-icon-confirm"></span>
            <label>
              <input id="do_ignore" name="do" type="radio" value="ignore" />
              <h4>Ignored</h4>
              <p>You will not receive notifications for this repository.</p>
            </label>
            <span class="context-button-text js-context-button-text">
              <span class="mini-icon mini-icon-mute"></span>
              Stop ignoring
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</form>
          </li>

          <li class="js-toggler-container js-social-container starring-container on">
            <a href="/nirnaor/DiamondsGallery/toggle_star" class="minibutton js-toggler-target" data-remote="true" data-method="post" rel="nofollow">
              <span class="starred">
                <span class="mini-icon mini-icon-star"></span>
                  Unstar
              </span>
              <span class="unstarred">
                <span class="mini-icon mini-icon-star"></span>
                  Star
              </span>
            </a>

            <a class="social-count js-social-count" href="/nirnaor/DiamondsGallery/stargazers">2</a>
          </li>

              <li><a href="/nirnaor/DiamondsGallery/fork" class="minibutton btn-fork js-toggler-target fork-button lighter" rel="nofollow" data-method="post">Fork</a><a href="/nirnaor/DiamondsGallery/network" class="social-count">1</a>
              </li>


    </ul>

          <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
            <span class="repo-label"><span>public</span></span>
            <span class="mega-icon mega-icon-public-repo"></span>
            <span class="author vcard">
<a href="/nirnaor" class="url fn" itemprop="url" rel="author">              <span itemprop="title">nirnaor</span>
              </a></span> /
            <strong><a href="/nirnaor/DiamondsGallery" class="js-current-repository">DiamondsGallery</a></strong>
          </h1>
        </div>

          

  <ul class="tabs">
    <li><a href="/nirnaor/DiamondsGallery" class="selected" highlight="repo_sourcerepo_downloadsrepo_commitsrepo_tagsrepo_branches">Code</a></li>
    <li><a href="/nirnaor/DiamondsGallery/network" highlight="repo_network">Network</a>
    <li><a href="/nirnaor/DiamondsGallery/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/nirnaor/DiamondsGallery/issues" highlight="repo_issues">Issues <span class='counter'>0</span></a></li>

      <li><a href="/nirnaor/DiamondsGallery/wiki" highlight="repo_wiki">Wiki</a></li>

    <li><a href="/nirnaor/DiamondsGallery/graphs" highlight="repo_graphsrepo_contributors">Graphs</a></li>

      <li>
        <a href="/nirnaor/DiamondsGallery/admin">Admin</a>
      </li>

  </ul>
  
<div class="frame frame-center tree-finder" style="display:none"
      data-tree-list-url="/nirnaor/DiamondsGallery/tree-list/8e461faec0d4111765903bc76370ef822e903567"
      data-blob-url-prefix="/nirnaor/DiamondsGallery/blob/8e461faec0d4111765903bc76370ef822e903567"
    >

  <div class="breadcrumb">
    <span class="bold"><a href="/nirnaor/DiamondsGallery">DiamondsGallery</a></span> /
    <input class="tree-finder-input js-navigation-enable" type="text" name="query" autocomplete="off" spellcheck="false">
  </div>

    <div class="octotip">
      <p>
        <a href="/nirnaor/DiamondsGallery/dismiss-tree-finder-help" class="dismiss js-dismiss-tree-list-help" title="Hide this notice forever" rel="nofollow">Dismiss</a>
        <span class="bold">Octotip:</span> You've activated the <em>file finder</em>
        by pressing <span class="kbd">t</span> Start typing to filter the
        file list. Use <span class="kbd badmono">â</span> and
        <span class="kbd badmono">â</span> to navigate,
        <span class="kbd">enter</span> to view files.
      </p>
    </div>

  <table class="tree-browser" cellpadding="0" cellspacing="0">
    <tr class="js-header"><th>&nbsp;</th><th>name</th></tr>
    <tr class="js-no-results no-results" style="display: none">
      <th colspan="2">No matching files</th>
    </tr>
    <tbody class="js-results-list js-navigation-container">
    </tbody>
  </table>
</div>

<div id="jump-to-line" style="display:none">
  <h2>Jump to Line</h2>
  <form accept-charset="UTF-8">
    <input class="textfield" type="text">
    <div class="full-button">
      <button type="submit" class="classy">
        Go
      </button>
    </div>
  </form>
</div>


<div class="subnav-bar">

  <ul class="actions subnav">
    <li><a href="/nirnaor/DiamondsGallery/tags" class="blank" highlight="repo_tags">Tags <span class="counter">0</span></a></li>
    <li><a href="/nirnaor/DiamondsGallery/downloads" class="blank downloads-blank" highlight="repo_downloads">Downloads <span class="counter">0</span></a></li>
    
  </ul>

  <ul class="scope">
    <li class="switcher">

      <div class="context-menu-container js-menu-container js-context-menu">
        <a href="#"
           class="minibutton bigger switcher js-menu-target js-commitish-button btn-branch repo-tree"
           data-hotkey="w"
           data-master-branch="goingback"
           data-ref="goingback">
           <span><i>branch:</i> goingback</span>
        </a>

        <div class="context-pane commitish-context js-menu-content">
          <a href="javascript:;" class="close js-menu-close"><span class="mini-icon mini-icon-remove-close"></span></a>
          <div class="context-title">Switch branches/tags</div>
          <div class="context-body pane-selector commitish-selector js-navigation-container">
            <div class="filterbar">
              <input type="text" id="context-commitish-filter-field" class="js-navigation-enable" placeholder="Filter branches/tags" data-filterable />

              <ul class="tabs">
                <li><a href="#" data-filter="branches" class="selected">Branches</a></li>
                <li><a href="#" data-filter="tags">Tags</a></li>
              </ul>
            </div>

            <div class="js-filter-tab js-filter-branches" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              <div class="no-results js-not-filterable">Nothing to show</div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target ">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/nirnaor/DiamondsGallery/blob/fixing_master/src/public/js/jquery.cross-slide.min.js" class="js-navigation-open" data-name="fixing_master" rel="nofollow">fixing_master</a>
                  </h4>
                </div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target selected">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/nirnaor/DiamondsGallery/blob/goingback/src/public/js/jquery.cross-slide.min.js" class="js-navigation-open" data-name="goingback" rel="nofollow">goingback</a>
                  </h4>
                </div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target ">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/nirnaor/DiamondsGallery/blob/master/src/public/js/jquery.cross-slide.min.js" class="js-navigation-open" data-name="master" rel="nofollow">master</a>
                  </h4>
                </div>
                <div class="commitish-item branch-commitish selector-item js-navigation-item js-navigation-target ">
                  <span class="mini-icon mini-icon-confirm"></span>
                  <h4>
                      <a href="/nirnaor/DiamondsGallery/blob/master_ugly/src/public/js/jquery.cross-slide.min.js" class="js-navigation-open" data-name="master_ugly" rel="nofollow">master_ugly</a>
                  </h4>
                </div>
            </div>

            <div class="js-filter-tab js-filter-tags" style="display:none" data-filterable-for="context-commitish-filter-field" data-filterable-type=substring>
              <div class="no-results js-not-filterable">Nothing to show</div>
            </div>
          </div>
        </div><!-- /.commitish-context-context -->
      </div>

    </li>
  </ul>

  <ul class="subnav with-scope">

    <li><a href="/nirnaor/DiamondsGallery" class="selected" highlight="repo_source">Files</a></li>
    <li><a href="/nirnaor/DiamondsGallery/commits/goingback" highlight="repo_commits">Commits</a></li>
    <li><a href="/nirnaor/DiamondsGallery/branches" class="" highlight="repo_branches" rel="nofollow">Branches <span class="counter">4</span></a></li>
  </ul>

</div>

  
  
  


          

        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" data-pjax-container>
          




<!-- blob contrib key: blob_contributors:v21:c62b350c8d0aa48dd3eaf98d60028896 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:c62b350c8d0aa48dd3eaf98d60028896 -->

<!-- block_view_fragment_key: views10/v8/blob:v21:df93290d0f2347d7db84a962ad8fa3cb -->
  <div id="slider">

    <div class="breadcrumb" data-path="src/public/js/jquery.cross-slide.min.js/">
      <b itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nirnaor/DiamondsGallery/tree/8e461faec0d4111765903bc76370ef822e903567" class="js-rewrite-sha" itemprop="url"><span itemprop="title">DiamondsGallery</span></a></b> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nirnaor/DiamondsGallery/tree/8e461faec0d4111765903bc76370ef822e903567/src" class="js-rewrite-sha" itemscope="url"><span itemprop="title">src</span></a></span> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nirnaor/DiamondsGallery/tree/8e461faec0d4111765903bc76370ef822e903567/src/public" class="js-rewrite-sha" itemscope="url"><span itemprop="title">public</span></a></span> / <span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/nirnaor/DiamondsGallery/tree/8e461faec0d4111765903bc76370ef822e903567/src/public/js" class="js-rewrite-sha" itemscope="url"><span itemprop="title">js</span></a></span> / <strong class="final-path">jquery.cross-slide.min.js</strong> <span class="js-clippy mini-icon mini-icon-clippy " data-clipboard-text="src/public/js/jquery.cross-slide.min.js" data-copied-hint="copied!" data-copy-hint="copy to clipboard"></span>
    </div>

      <div class="commit file-history-tease js-blob-contributors-loader" data-request-url="/nirnaor/DiamondsGallery/contributors/goingback/src/public/js/jquery.cross-slide.min.js" data-path="src/public/js/jquery.cross-slide.min.js/">
        Fetching contributorsâ¦

        <div class="participation">
          <p class="quickstat js-loading-status-text"><img alt="Octocat-spinner-16px" height="16" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-16px.gif?1340659561" width="16" /></p>
        </div>
      </div>

    <div class="frames">
      <div class="frame frame-center" data-path="src/public/js/jquery.cross-slide.min.js/" data-permalink-url="/nirnaor/DiamondsGallery/blob/8e461faec0d4111765903bc76370ef822e903567/src/public/js/jquery.cross-slide.min.js" data-title="DiamondsGallery/src/public/js/jquery.cross-slide.min.js at goingback Â· nirnaor/DiamondsGallery Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>20 lines (20 sloc)</span>
                <span>6.78 kb</span>
              </div>
              <ul class="button-group actions">
                  <li>
                    <a class="grouped-button file-edit-link minibutton bigger lighter js-rewrite-sha" href="/nirnaor/DiamondsGallery/edit/8e461faec0d4111765903bc76370ef822e903567/src/public/js/jquery.cross-slide.min.js" data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
                  </li>
                <li>
                  <a href="/nirnaor/DiamondsGallery/raw/goingback/src/public/js/jquery.cross-slide.min.js" class="minibutton btn-raw grouped-button bigger lighter" id="raw-url">Raw</a>
                </li>
                  <li>
                    <a href="/nirnaor/DiamondsGallery/blame/goingback/src/public/js/jquery.cross-slide.min.js" class="minibutton btn-blame grouped-button bigger lighter">Blame</a>
                  </li>
                <li>
                  <a href="/nirnaor/DiamondsGallery/commits/goingback/src/public/js/jquery.cross-slide.min.js" class="minibutton btn-history grouped-button bigger lighter" rel="nofollow">History</a>
                </li>
              </ul>
            </div>
              <div class="data type-javascript">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
</pre>
          </td>
          <td width="100%">
                <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> * CrossSlide jQuery plugin v0.6.2</span></div><div class='line' id='LC3'><span class="cm"> *</span></div><div class='line' id='LC4'><span class="cm"> * Copyright 2007-2010 by Tobia Conforto &lt;tobia.conforto@gmail.com&gt;</span></div><div class='line' id='LC5'><span class="cm"> *</span></div><div class='line' id='LC6'><span class="cm"> * This program is free software; you can redistribute it and/or modify it</span></div><div class='line' id='LC7'><span class="cm"> * under the terms of the GNU General Public License as published by the Free</span></div><div class='line' id='LC8'><span class="cm"> * Software Foundation; either version 2 of the License, or (at your option)</span></div><div class='line' id='LC9'><span class="cm"> * any later version.</span></div><div class='line' id='LC10'><span class="cm"> *</span></div><div class='line' id='LC11'><span class="cm"> * This program is distributed in the hope that it will be useful, but WITHOUT</span></div><div class='line' id='LC12'><span class="cm"> * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span></div><div class='line' id='LC13'><span class="cm"> * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for</span></div><div class='line' id='LC14'><span class="cm"> * more details.</span></div><div class='line' id='LC15'><span class="cm"> *</span></div><div class='line' id='LC16'><span class="cm"> * You should have received a copy of the GNU General Public License along with</span></div><div class='line' id='LC17'><span class="cm"> * this program; if not, write to the Free Software Foundation, Inc., 51</span></div><div class='line' id='LC18'><span class="cm"> * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.</span></div><div class='line' id='LC19'><span class="cm"> */</span></div><div class='line' id='LC20'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">jQuery</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">startAnimation</span><span class="o">?</span><span class="s2">&quot;startAnimation&quot;</span><span class="o">:</span><span class="s2">&quot;animate&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;pause plugin missing.&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;\\{&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;}&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">g</span><span class="p">])}</span><span class="k">return</span> <span class="nx">h</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;CrossSlide: &quot;</span><span class="o">+</span><span class="nx">arguments</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">arguments</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^\s*|\s*$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">){</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;center&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="s2">&quot;center&quot;</span><span class="p">]}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^[\d.]+x$/i</span><span class="p">)){</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]]}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">3</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^([\d.]+)x$/i</span><span class="p">)[</span><span class="mi">1</span><span class="p">])}</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;left top&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;top left&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;left center&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;center left&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;left bottom&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;bottom left&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;center top&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;top center&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;center center&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;center bottom&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;bottom center&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;right top&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;top right&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;right center&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;center right&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;right bottom&quot;</span><span class="o">||</span><span class="nx">j</span><span class="o">==</span><span class="s2">&quot;bottom right&quot;</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="k">return</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(\d+)%$/</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="nx">match</span><span class="p">(</span><span class="sr">/^(\d+)%$/</span><span class="p">)[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">100</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="nx">g</span><span class="p">}}</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlide</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">!=</span><span class="mi">1</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;crossSlide() must be called on exactly 1 element&quot;</span><span class="p">)}</span><span class="nx">g</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">crossSlideArgs</span><span class="o">=</span><span class="p">[</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">];</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">m</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">m</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">.</span><span class="nx">easing</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">easing</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">variant</span><span class="o">?</span><span class="s2">&quot;swing&quot;</span><span class="o">:</span><span class="s2">&quot;linear&quot;</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(){}}(</span><span class="kd">function</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">m</span><span class="o">++</span><span class="p">;</span><span class="nx">k</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">width</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">k</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">height</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">==</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">o</span><span class="p">()}};</span><span class="nx">p</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">src</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">n</span><span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="k">new</span> <span class="nx">Image</span><span class="p">())}}</span><span class="nx">n</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="k">new</span> <span class="nx">Image</span><span class="p">())})(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">.</span><span class="nx">fade</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;missing fade parameter.&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">speed</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">sleep</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;you cannot set both speed and sleep at the same time.&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">A</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">fade</span><span class="o">*</span><span class="mi">1000</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">sleep</span><span class="p">){</span><span class="kd">var</span> <span class="nx">z</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">sleep</span><span class="o">*</span><span class="mi">1000</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">speed</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">speed</span><span class="o">/</span><span class="mi">1000</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">A</span><span class="o">*</span><span class="nx">o</span><span class="p">)}</span><span class="nx">g</span><span class="p">.</span><span class="nx">empty</span><span class="p">().</span><span class="nx">css</span><span class="p">({</span><span class="nx">overflow</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/^(absolute|relative|fixed)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">))){</span><span class="nx">g</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">||!</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="p">()){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;container element does not have its own width and height&quot;</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">shuffle</span><span class="p">){</span><span class="nx">k</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span><span class="o">-</span><span class="mf">0.5</span><span class="p">})}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">t</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">src</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;missing src parameter in picture {0}.&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">o</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">dir</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;up&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">h</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;down&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">h</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">j</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="p">{</span><span class="nx">xrel</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">yrel</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">zoom</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">j</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;missing or malformed dir parameter in picture {0}.&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">x</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;impossible animation: either picture {0} is too small or div is too large or fade duration too long.&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="nx">m</span><span class="p">.</span><span class="nx">time_ms</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">x</span><span class="o">/</span><span class="nx">o</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="o">||!</span><span class="nx">m</span><span class="p">.</span><span class="nx">time</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s2">&quot;missing either speed/sleep option, or from/to/time params in picture {0}.&quot;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">try</span><span class="p">{</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s1">&#39;malformed &quot;from&quot; parameter in picture {0}.&#39;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">try</span><span class="p">{</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">w</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s1">&#39;malformed &quot;to&quot; parameter in picture {0}.&#39;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">time</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="s1">&#39;missing &quot;time&quot; parameter in picture {0}.&#39;</span><span class="p">,</span><span class="nx">t</span><span class="o">+</span><span class="mi">1</span><span class="p">)}</span><span class="nx">m</span><span class="p">.</span><span class="nx">time_ms</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">time</span><span class="o">*</span><span class="mi">1000</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="nx">m</span><span class="p">.</span><span class="nx">from</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">to</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="nx">C</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="nx">C</span><span class="p">.</span><span class="nx">zoom</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="nx">C</span><span class="p">.</span><span class="nx">zoom</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">((</span><span class="nx">j</span><span class="o">-</span><span class="nx">C</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">*</span><span class="nx">C</span><span class="p">.</span><span class="nx">xrel</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">((</span><span class="nx">h</span><span class="o">-</span><span class="nx">C</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">*</span><span class="nx">C</span><span class="p">.</span><span class="nx">yrel</span><span class="p">)})}</span><span class="kd">var</span> <span class="nx">s</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="nx">s</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="s1">&#39;&lt;img src=&quot;{0}&quot;/&gt;&#39;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">src</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">href</span><span class="p">){</span><span class="nx">y</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="s1">&#39;&lt;a href=&quot;{0}&quot;&gt;&lt;/a&gt;&#39;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">href</span><span class="p">)).</span><span class="nx">append</span><span class="p">(</span><span class="nx">s</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">onclick</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">click</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">onclick</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">alt</span><span class="p">){</span><span class="nx">s</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;alt&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">alt</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">rel</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;rel&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">rel</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">href</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">target</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;target&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">target</span><span class="p">)}</span><span class="nx">y</span><span class="p">.</span><span class="nx">appendTo</span><span class="p">(</span><span class="nx">g</span><span class="p">)}</span><span class="k">delete</span> <span class="nx">o</span><span class="p">;</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">D</span><span class="p">,</span><span class="nx">C</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="nx">A</span><span class="o">/</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">time_ms</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">A</span><span class="p">),</span><span class="mi">1</span><span class="o">-</span><span class="nx">A</span><span class="o">/</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">time_ms</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">A</span><span class="p">),</span><span class="mi">1</span><span class="p">][</span><span class="nx">C</span><span class="p">];</span><span class="k">return</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">left</span><span class="p">)),</span><span class="nx">top</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">top</span><span class="p">)),</span><span class="nx">width</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">width</span><span class="p">)),</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="nx">E</span><span class="o">*</span><span class="p">(</span><span class="nx">D</span><span class="p">.</span><span class="nx">to</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">D</span><span class="p">.</span><span class="nx">from</span><span class="p">.</span><span class="nx">height</span><span class="p">))}}</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">z</span><span class="p">){</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="p">.</span><span class="nx">variant</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">loop</span><span class="p">;</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">O</span><span class="p">,</span><span class="nx">p</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="o">%</span><span class="mi">2</span><span class="o">==</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="kd">var</span> <span class="nx">E</span><span class="o">=</span><span class="nx">O</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="p">(</span><span class="nx">E</span><span class="o">-</span><span class="mi">1</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">P</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">E</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">S</span><span class="p">);</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">P</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="nx">M</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;visibility&quot;</span><span class="p">,</span><span class="s2">&quot;hidden&quot;</span><span class="p">);</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">z</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">H</span><span class="o">=</span><span class="nx">O</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="p">(</span><span class="nx">H</span><span class="o">-</span><span class="mi">1</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">%</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">H</span><span class="p">),</span><span class="nx">M</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">S</span><span class="p">),</span><span class="nx">F</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">time_ms</span><span class="p">,</span><span class="nx">N</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">H</span><span class="p">],</span><span class="nx">i</span><span class="p">.</span><span class="nx">variant</span><span class="o">?</span><span class="mi">3</span><span class="o">:</span><span class="mi">2</span><span class="p">);</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="nx">H</span><span class="p">,</span><span class="nx">R</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="nx">M</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;visibility&quot;</span><span class="p">,</span><span class="s2">&quot;hidden&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">N</span><span class="p">,</span><span class="nx">F</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">easing</span><span class="p">,</span><span class="nx">p</span><span class="p">)}}}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">O</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">G</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">O</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">%</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">D</span><span class="p">),</span><span class="nx">C</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">eq</span><span class="p">(</span><span class="nx">G</span><span class="p">),</span><span class="nx">T</span><span class="o">=</span><span class="p">{},</span><span class="nx">K</span><span class="o">=</span><span class="p">{</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">},</span><span class="nx">J</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">G</span><span class="o">&gt;</span><span class="nx">D</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">doubleFade</span><span class="p">){</span><span class="nx">T</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">0</span><span class="p">}}</span><span class="k">else</span><span class="p">{</span><span class="nx">T</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">doubleFade</span><span class="p">){</span><span class="nx">K</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">J</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">}}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">z</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">K</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="mi">0</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">.</span><span class="nx">variant</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">T</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">D</span><span class="p">],</span><span class="mi">3</span><span class="p">));</span><span class="nx">d</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">J</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">G</span><span class="p">],</span><span class="mi">1</span><span class="p">))}}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">J</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">D</span><span class="p">,</span><span class="nx">Q</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">Q</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">T</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;linear&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">isEmptyObject</span><span class="p">(</span><span class="nx">T</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">D</span><span class="p">,</span><span class="nx">Q</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">C</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">J</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;linear&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">(</span><span class="nx">G</span><span class="p">,</span><span class="nx">C</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">D</span><span class="p">,</span><span class="nx">Q</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span><span class="nx">C</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">K</span><span class="p">);</span><span class="nx">C</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">J</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;linear&quot;</span><span class="p">);</span><span class="nx">Q</span><span class="p">[</span><span class="nx">a</span><span class="p">](</span><span class="nx">T</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="s2">&quot;linear&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">)}}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">loop</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="o">==</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">2</span><span class="p">){</span><span class="kd">var</span> <span class="nx">I</span><span class="o">=</span><span class="nx">L</span><span class="p">;</span><span class="nx">L</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">--</span><span class="nx">B</span><span class="p">){</span><span class="nx">I</span><span class="p">()}}}</span><span class="k">if</span><span class="p">(</span><span class="nx">O</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="nx">q</span><span class="p">(</span><span class="nx">O</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">L</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">L</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">q</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="o">*</span><span class="mi">2</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">r</span><span class="p">()});</span><span class="nx">r</span><span class="p">()});</span><span class="k">return</span> <span class="nx">g</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlideFreeze</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">stop</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlideStop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">stop</span><span class="p">().</span><span class="nx">remove</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlideRestart</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">stop</span><span class="p">().</span><span class="nx">remove</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlide</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">crossSlideArgs</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlidePause</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">pause</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">pause</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">crossSlideResume</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">pause</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">resume</span><span class="p">()}})();</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>
      </div>
    </div>

  </div>

<div class="frame frame-loading large-loading-area" style="display:none;" data-tree-list-url="/nirnaor/DiamondsGallery/tree-list/8e461faec0d4111765903bc76370ef822e903567" data-blob-url-prefix="/nirnaor/DiamondsGallery/blob/8e461faec0d4111765903bc76370ef822e903567">
  <img src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-64.gif?1340659561" height="64" width="64">
</div>

        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer" >
        
  <div class="upper_footer">
     <div class="container clearfix">

       <!--[if IE]><h4 id="blacktocat_ie">GitHub Links</h4><![endif]-->
       <![if !IE]><h4 id="blacktocat">GitHub Links</h4><![endif]>

       <ul class="footer_nav">
         <h4>GitHub</h4>
         <li><a href="https://github.com/about">About</a></li>
         <li><a href="https://github.com/blog">Blog</a></li>
         <li><a href="https://github.com/features">Features</a></li>
         <li><a href="https://github.com/contact">Contact &amp; Support</a></li>
         <li><a href="https://github.com/training">Training</a></li>
         <li><a href="http://enterprise.github.com/">GitHub Enterprise</a></li>
         <li><a href="http://status.github.com/">Site Status</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Clients</h4>
         <li><a href="http://mac.github.com/">GitHub for Mac</a></li>
         <li><a href="http://windows.github.com/">GitHub for Windows</a></li>
         <li><a href="http://eclipse.github.com/">GitHub for Eclipse</a></li>
         <li><a href="http://mobile.github.com/">GitHub Mobile Apps</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Tools</h4>
         <li><a href="http://get.gaug.es/">Gauges: Web analytics</a></li>
         <li><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></li>
         <li><a href="https://gist.github.com">Gist: Code snippets</a></li>

         <h4 class="second">Extras</h4>
         <li><a href="http://jobs.github.com/">Job Board</a></li>
         <li><a href="http://shop.github.com/">GitHub Shop</a></li>
         <li><a href="http://octodex.github.com/">The Octodex</a></li>
       </ul>

       <ul class="footer_nav">
         <h4>Documentation</h4>
         <li><a href="http://help.github.com/">GitHub Help</a></li>
         <li><a href="http://developer.github.com/">Developer API</a></li>
         <li><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></li>
         <li><a href="http://pages.github.com/">GitHub Pages</a></li>
       </ul>

     </div><!-- /.site -->
  </div><!-- /.upper_footer -->

<div class="lower_footer">
  <div class="container clearfix">
    <!--[if IE]><div id="legal_ie"><![endif]-->
    <![if !IE]><div id="legal"><![endif]>
      <ul>
          <li><a href="https://github.com/site/terms">Terms of Service</a></li>
          <li><a href="https://github.com/site/privacy">Privacy</a></li>
          <li><a href="https://github.com/security">Security</a></li>
      </ul>

      <p>&copy; 2012 <span title="0.43342s from fe18.rs.github.com">GitHub</span> Inc. All rights reserved.</p>
    </div><!-- /#legal or /#legal_ie-->

  </div><!-- /.site -->
</div><!-- /.lower_footer -->

      </div><!-- /#footer -->

    

<div id="keyboard_shortcuts_pane" class="instapaper_ignore readability-extra" style="display:none">
  <h2>Keyboard Shortcuts <small><a href="#" class="js-see-all-keyboard-shortcuts">(see all)</a></small></h2>

  <div class="columns threecols">
    <div class="column first">
      <h3>Site wide shortcuts</h3>
      <dl class="keyboard-mappings">
        <dt>s</dt>
        <dd>Focus site search</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>?</dt>
        <dd>Bring up this help dialog</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column middle" style='display:none'>
      <h3>Commit list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>c <em>or</em> o <em>or</em> enter</dt>
        <dd>Open commit</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>y</dt>
        <dd>Expand URL to its canonical form</dd>
      </dl>
    </div><!-- /.column.first -->

    <div class="column last js-hidden-pane" style='display:none'>
      <h3>Pull request list</h3>
      <dl class="keyboard-mappings">
        <dt>j</dt>
        <dd>Move selection down</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>k</dt>
        <dd>Move selection up</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt>o <em>or</em> enter</dt>
        <dd>Open issue</dd>
      </dl>
      <dl class="keyboard-mappings">
        <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
        <dd>Submit comment</dd>
      </dl>
    </div><!-- /.columns.last -->

  </div><!-- /.columns.equacols -->

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>x</dt>
          <dd>Toggle selection</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>c</dt>
          <dd>Create issue</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Create label</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>i</dt>
          <dd>Back to inbox</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>u</dt>
          <dd>Back to issues</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>/</dt>
          <dd>Focus issues search</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Issues Dashboard</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open issue</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>

    <h3>Network Graph</h3>
    <div class="columns equacols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> h</dt>
          <dd>Scroll left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> l</dt>
          <dd>Scroll right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> k</dt>
          <dd>Scroll up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt><span class="badmono">â</span> <em>or</em> j</dt>
          <dd>Scroll down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Toggle visibility of head labels</dd>
        </dl>
      </div><!-- /.column.first -->
      <div class="column last">
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift h</dt>
          <dd>Scroll all the way left</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift l</dt>
          <dd>Scroll all the way right</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift k</dt>
          <dd>Scroll all the way up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift <span class="badmono">â</span> <em>or</em> shift j</dt>
          <dd>Scroll all the way down</dd>
        </dl>
      </div><!-- /.column.last -->
    </div>
  </div>

  <div class="js-hidden-pane" >
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first js-hidden-pane" >
        <h3>Source Code Browsing</h3>
        <dl class="keyboard-mappings">
          <dt>t</dt>
          <dd>Activates the file finder</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>l</dt>
          <dd>Jump to line</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>w</dt>
          <dd>Switch branch/tag</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>y</dt>
          <dd>Expand URL to its canonical form</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <div class="columns threecols">
      <div class="column first">
        <h3>Browsing Commits</h3>
        <dl class="keyboard-mappings">
          <dt><span class="platform-mac">â</span><span class="platform-other">ctrl</span> <em>+</em> enter</dt>
          <dd>Submit comment</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>escape</dt>
          <dd>Close form</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>p</dt>
          <dd>Parent commit</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o</dt>
          <dd>Other parent commit</dd>
        </dl>
      </div>
    </div>
  </div>

  <div class="js-hidden-pane" style='display:none'>
    <div class="rule"></div>
    <h3>Notifications</h3>

    <div class="columns threecols">
      <div class="column first">
        <dl class="keyboard-mappings">
          <dt>j</dt>
          <dd>Move selection down</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>k</dt>
          <dd>Move selection up</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>o <em>or</em> enter</dt>
          <dd>Open notification</dd>
        </dl>
      </div><!-- /.column.first -->

      <div class="column second">
        <dl class="keyboard-mappings">
          <dt>e <em>or</em> shift i <em>or</em> y</dt>
          <dd>Mark as read</dd>
        </dl>
        <dl class="keyboard-mappings">
          <dt>shift m</dt>
          <dd>Mute thread</dd>
        </dl>
      </div><!-- /.column.first -->
    </div>
  </div>

</div>

    <div id="markdown-help" class="instapaper_ignore readability-extra">
  <h2>Markdown Cheat Sheet</h2>

  <div class="cheatsheet-content">

  <div class="mod">
    <div class="col">
      <h3>Format Text</h3>
      <p>Headers</p>
      <pre>
# This is an &lt;h1&gt; tag
## This is an &lt;h2&gt; tag
###### This is an &lt;h6&gt; tag</pre>
     <p>Text styles</p>
     <pre>
*This text will be italic*
_This will also be italic_
**This text will be bold**
__This will also be bold__

*You **can** combine them*
</pre>
    </div>
    <div class="col">
      <h3>Lists</h3>
      <p>Unordered</p>
      <pre>
* Item 1
* Item 2
  * Item 2a
  * Item 2b</pre>
     <p>Ordered</p>
     <pre>
1. Item 1
2. Item 2
3. Item 3
   * Item 3a
   * Item 3b</pre>
    </div>
    <div class="col">
      <h3>Miscellaneous</h3>
      <p>Images</p>
      <pre>
![GitHub Logo](/images/logo.png)
Format: ![Alt Text](url)
</pre>
     <p>Links</p>
     <pre>
http://github.com - automatic!
[GitHub](http://github.com)</pre>
<p>Blockquotes</p>
     <pre>
As Kanye West said:

> We're living the future so
> the present is our past.
</pre>
    </div>
  </div>
  <div class="rule"></div>

  <h3>Code Examples in Markdown</h3>
  <div class="col">
      <p>Syntax highlighting with <a href="http://github.github.com/github-flavored-markdown/" title="GitHub Flavored Markdown" target="_blank">GFM</a></p>
      <pre>
```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```</pre>
    </div>
    <div class="col">
      <p>Or, indent your code 4 spaces</p>
      <pre>
Here is a Python code example
without syntax highlighting:

    def foo:
      if not bar:
        return true</pre>
    </div>
    <div class="col">
      <p>Inline code for comments</p>
      <pre>
I think you should use an
`&lt;addr&gt;` element here instead.</pre>
    </div>
  </div>

  </div>
</div>


    <div id="ajax-error-message">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="ajax-error-dismiss">Dismiss</a>
    </div>

    <div id="logo-popup">
      <h2>Looking for the GitHub logo?</h2>
      <ul>
        <li>
          <h4>GitHub Logo</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip"><img alt="Github_logo" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/github_logo.png?1340659560" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/GitHub_Logos.zip" class="minibutton btn-download download">Download</a>
        </li>
        <li>
          <h4>The Octocat</h4>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip"><img alt="Octocat" src="https://a248.e.akamai.net/assets.github.com/images/modules/about_page/octocat.png?1340659560" /></a>
          <a href="http://github-media-downloads.s3.amazonaws.com/Octocats.zip" class="minibutton btn-download download">Download</a>
        </li>
      </ul>
    </div>

    
    <span id='server_response_time' data-time='0.43614' data-host='fe18'></span>
  </body>
</html>

